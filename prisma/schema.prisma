generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String      @unique
  skillSetId    String      @db.ObjectId
  changeablesId String      @db.ObjectId
  skillSet      SkillSet    @relation(fields: [skillSetId], references: [id])
  changeables   Changeables @relation(fields: [changeablesId], references: [id])
}

model SkillSet {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  strength     Int    @default(5)
  dexterity    Int    @default(5)
  endurance    Int    @default(5)
  intelligence Int    @default(5)
  karma        Int    @default(5)
  User         User[]
}

enum ESkills {
  strength
  dexterity
  endurance
  intelligence
  karma
}

model Changeables {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  stone     Int    @default(0)
  lootboxes Int    @default(0)
  treasures Int    @default(0)
  townHall  Float  @default(0)
  User      User[]
}

model Action {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  name            EActionNames     @unique
  baseValue       Float
  resultType      EActionValueType
  affectingSkills AffectingSkill[]
  MainAction      MainAction[]
  ExtraAction     ExtraAction[]
}

enum EActionNames {
  getStone
  getLootbox
  exploreArea
  buildTownHall
}

type AffectingSkill {
  name    ESkills
  divider Float
}

enum EActionValueType {
  percent
  flat
}

model MainAction {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  actionId String @db.ObjectId
  action   Action @relation(fields: [actionId], references: [id])
}

model ExtraAction {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  actionId String @db.ObjectId
  action   Action @relation(fields: [actionId], references: [id])
}
